/**
 * Media query mixin
 * ================================================== */
$grid-breakpoints: (
  xs: 480px,
  sm: 768px,
  md: 992px,
  lg: 1200px
);

// Retrieve breakpoints from breakpoint map
@function mq-get-breakpoint-width($name, $breakpoints: $grid-breakpoints) {
  @if map-has-key($breakpoints, $name) {
    @return map-get($breakpoints, $name);
  } @else {
    @warn "Breakpoint #{$name} wasn't found in $breakpoints.";
  }
}
// The media query mixin itself
@mixin mq(
	$from: false,
	$until: false,
	$and: false,
	$media-type: 'all',
	$breakpoints: $grid-breakpoints
) {
  $min-width: 0;
  $max-width: 0;
  $media-query: ''; // From: this breakpoint (inclusive)
  @if $from {
    @if type-of($from) == number {
      $min-width: $from;
    } @else {
      $min-width: mq-get-breakpoint-width($from, $breakpoints);
    }
  }
  // Until: that breakpoint (exclusive)
  @if $until {
    @if type-of($until) == number {
      $max-width: $until;
    } @else {
      $max-width: mq-get-breakpoint-width($until, $breakpoints) - 1px;
    }
  }
  // Set the conditions
  @if $min-width != 0 {
    $media-query: '#{$media-query} and (min-width: #{$min-width})';
  }
  @if $max-width != 0 {
    $media-query: '#{$media-query} and (max-width: #{$max-width})';
  }
  @if $and {
    $media-query: '#{$media-query} and #{$and}';
  }
  // Remove unnecessary media query prefix 'all and '
  @if ($media-type == 'all' and $media-query != '') {
    $media-type: '';
    $media-query: str-slice(unquote($media-query), 6);
  }
  // Output content
  @media #{$media-type + $media-query} {
    @content;
  }
}
